// https://docs.spring.io/spring-boot/docs/2.4.5/reference/html/dependency-versions.html#dependency-versions
buildscript {
    ext {
        groupId = "io.github.syaku"
        versionName = "1.0.0-SNAPSHOT"
        // https://docs.spring.io/spring-boot/docs/2.4.5/reference/htmlsingle
        springBootVersion = "2.4.5"
        // https://docs.spring.io/spring-cloud/docs/2020.0.3/reference/html/
        springCloudVersion = "2020.0.3"
        junitVersion = "5.7.1"
        lombokVersion = "1.18.12"
        jacksonVersion = "2.11.4"
        mapstructVersion = "1.4.2.Final"
    }

    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }

    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.3"
        classpath "io.franzbecker:gradle-lombok:3.1.0"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"
    }
}

subprojects {
    wrapper {
        gradleVersion = "7.2"
    }

    apply plugin: "java"
    apply plugin: "java-library"
    apply plugin: "application"
    apply plugin: "idea"
    apply plugin: "io.franzbecker.gradle-lombok"
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "org.sonarqube"
    apply plugin: "jacoco"

    idea {
        module {
            inheritOutputDirs = true
            outputDir = compileJava.destinationDir
            testOutputDir = compileTestJava.destinationDir
        }
    }

    repositories {
        mavenCentral()
    }

    group groupId
    version versionName

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    compileJava.options.encoding = 'UTF-8'

    configurations {
        implementation.exclude module: "spring-boot-starter-tomcat"
        testImplementation.exclude group: "junit", module: "junit"
        querydsl.extendsFrom compileClasspath
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    dependencies {
        implementation "org.mapstruct:mapstruct:${mapstructVersion}"
        implementation "org.mapstruct.extensions.spring:mapstruct-spring-annotations:0.1.0"

        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        testCompileOnly "org.projectlombok:lombok:${lombokVersion}"

        annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
        annotationProcessor "org.mapstruct.extensions.spring:mapstruct-spring-annotations:0.1.0"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

        testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
        testAnnotationProcessor "org.mapstruct.extensions.spring:mapstruct-spring-annotations:0.1.0"
        testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        testAnnotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        implementation "org.springframework.boot:spring-boot-starter-validation"

        implementation "org.springframework.boot:spring-boot-starter-undertow"
        implementation "org.springframework.boot:spring-boot-starter-web"
        // or implementation "org.springframework.boot:spring-boot-starter"
        testImplementation "org.springframework.boot:spring-boot-starter-test"

        testImplementation "org.springframework.cloud:spring-cloud-starter-contract-stub-runner"

        implementation "org.springframework.boot:spring-boot-starter-amqp"
        implementation "org.springframework.amqp:spring-rabbit-test"
    }

    sonarqube {
        properties {
            property "sonar.host.url", "https://sonarcloud.io"
            property "sonar.organization", "syakuis-github"
            property "sonar.projectKey", "syakuis-github"
            property "sonar.projectName", "spring-rabbitmq"
            property "sonar.language", "java"
            property "sonar.sourceEncoding", "UTF-8"
            property "sonar.sources", "src/main/java"
            property "sonar.exclusions", "**/*Test*.*, **/Q*.java"
            property "sonar.test.inclusions", "**/*Test.java"
            property "sonar.coverage.exclusions", "**/*Test*.*, **/Q*.java"
            property "sonar.java.junit.reportPaths", "${buildDir}/test-results"
            property "sonar.jacoco.reportPaths", "${buildDir}/jacoco/jacoco.exec"
        }
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
        systemProperty 'spring.profiles.active', 'test'
    }

    application {
        mainClass = "${groupId}.Application"
    }

    bootJar {
        enabled = true
        launchScript()
    }

    jar {
        enabled false
    }
}

